{
  "version": 3,
  "file": "pushStateLocationService.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/core/vanilla/pushStateLocationService.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;AAC7D,OAAO,EAAkB,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,oBAAoB,EAAE,MAAM,WAAW,CAAC;AAE9F;;;;GAIG;AACH;IAA8C,4CAAoB;IAGhE,kCAAY,MAAgB;QAA5B,YACE,kBAAM,MAAM,EAAE,IAAI,CAAC,SAGpB;QAFC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;IAC3D,CAAC;IAED;;;;;;;;;;;;;;;OAeG;IACK,iDAAc,GAAtB;QACE,OAAO,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;IAES,uCAAI,GAAd;QACM,IAAA,KAA6B,IAAI,CAAC,SAAS,EAAzC,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAmB,CAAC;QAChD,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB;QACnD,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB;QAE9C,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAM,kBAAkB,GAAG,QAAQ,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAChE,IAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,UAAU,CAAC;QAC5E,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QAExG,OAAO,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;IAES,uCAAI,GAAd,UAAe,KAAU,EAAE,KAAa,EAAE,GAAW,EAAE,OAAgB;QACrE,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,IAAM,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/C,IAAM,OAAO,GAAG,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,KAAK,GAAG,GAAG,CAAC;QAE/F,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;SAChD;IACH,CAAC;IAEM,0CAAO,GAAd,UAAe,MAAgB;QAC7B,iBAAM,OAAO,YAAC,MAAM,CAAC,CAAC;QACtB,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IACH,+BAAC;AAAD,CAAC,AA1DD,CAA8C,oBAAoB,GA0DjE",
  "sourcesContent": [
    "import { UIRouter } from '../router';\nimport { BaseLocationServices } from './baseLocationService';\nimport { LocationConfig, root, splitHash, splitQuery, stripLastPathElement } from '../common';\n\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nexport class PushStateLocationService extends BaseLocationServices {\n  _config: LocationConfig;\n\n  constructor(router: UIRouter) {\n    super(router, true);\n    this._config = router.urlService.config;\n    root.addEventListener('popstate', this._listener, false);\n  }\n\n  /**\n   * Gets the base prefix without:\n   * - trailing slash\n   * - trailing filename\n   * - protocol and hostname\n   *\n   * If <base href='/base/'>, this returns '/base'.\n   * If <base href='/foo/base/'>, this returns '/foo/base'.\n   * If <base href='/base/index.html'>, this returns '/base'.\n   * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n   * If <base href='/base'>, this returns ''.\n   * If <base href='http://localhost:8080'>, this returns ''.\n   * If <base href='http://localhost:8080/'>, this returns ''.\n   *\n   * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n   */\n  private _getBasePrefix() {\n    return stripLastPathElement(this._config.baseHref());\n  }\n\n  protected _get() {\n    let { pathname, hash, search } = this._location;\n    search = splitQuery(search)[1]; // strip ? if found\n    hash = splitHash(hash)[1]; // strip # if found\n\n    const basePrefix = this._getBasePrefix();\n    const exactBaseHrefMatch = pathname === this._config.baseHref();\n    const startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n    pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n\n    return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n  }\n\n  protected _set(state: any, title: string, url: string, replace: boolean) {\n    const basePrefix = this._getBasePrefix();\n    const slash = url && url[0] !== '/' ? '/' : '';\n    const fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n\n    if (replace) {\n      this._history.replaceState(state, title, fullUrl);\n    } else {\n      this._history.pushState(state, title, fullUrl);\n    }\n  }\n\n  public dispose(router: UIRouter) {\n    super.dispose(router);\n    root.removeEventListener('popstate', this._listener);\n  }\n}\n"
  ]
}