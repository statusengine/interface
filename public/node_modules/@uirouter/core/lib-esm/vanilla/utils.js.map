{
  "version": 3,
  "file": "utils.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/core/vanilla/utils.ts"
  ],
  "names": [],
  "mappings": "AAAA,OAAO,EAGL,QAAQ,EACR,OAAO,EACP,OAAO,EACP,UAAU,EACV,SAAS,EACT,UAAU,GACX,MAAM,WAAW,CAAC;AAGnB,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,KAAK,EAAE,EAAU;QAAT,GAAG,QAAA,EAAE,GAAG,QAAA;IAC/C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAC9B,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KAClB;SAAM,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9B,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACtB;SAAM;QACL,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;KAChC;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,WAAmB;IAC3C,OAAA,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;AAApF,CAAoF,CAAC;AAEvF,MAAM,UAAU,QAAQ,CAAC,GAAW;IAClC,IAAM,aAAa,GAAG,UAAC,CAAC,IAAK,OAAA,CAAC,IAAI,EAAE,EAAP,CAAO,CAAC;IAC/B,IAAA,KAAqB,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,EAArD,UAAU,QAAA,EAAE,IAAI,QAAqC,CAAC;IACvD,IAAA,KAAiB,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,EAAzD,IAAI,QAAA,EAAE,MAAM,QAA6C,CAAC;IAEjE,OAAO,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,GAAG,KAAA,EAAE,CAAC;AACrC,CAAC;AAED,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,GAAqB;IAC5C,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IACxB,IAAM,YAAY,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;IAClC,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAExB,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;SACrC,GAAG,CAAC,UAAC,GAAG;QACP,IAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;QAChC,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,GAAG,GAAG,GAAG,GAAG,EAAf,CAAe,CAAC,CAAC;IAC5C,CAAC,CAAC;SACD,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC;SACnB,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACxE,CAAC,CAAC;AAEF,MAAM,UAAU,qBAAqB,CACnC,IAAY,EACZ,OAAgB,EAChB,YAA6D,EAC7D,kBAAoF;IAEpF,OAAO,UAAU,QAAkB;QACjC,IAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxE,IAAM,aAAa,GAAG,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;QAE5F,SAAS,OAAO,CAAC,MAAgB;YAC/B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACxB,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,aAAa,eAAA,EAAE,OAAO,SAAA,EAAE,CAAC;IACnD,CAAC,CAAC;AACJ,CAAC",
  "sourcesContent": [
    "import {\n  LocationConfig,\n  LocationServices,\n  identity,\n  unnestR,\n  isArray,\n  splitEqual,\n  splitHash,\n  splitQuery,\n} from '../common';\nimport { UIRouter } from '../router';\n\nexport const keyValsToObjectR = (accum, [key, val]) => {\n  if (!accum.hasOwnProperty(key)) {\n    accum[key] = val;\n  } else if (isArray(accum[key])) {\n    accum[key].push(val);\n  } else {\n    accum[key] = [accum[key], val];\n  }\n  return accum;\n};\n\nexport const getParams = (queryString: string): any =>\n  queryString.split('&').filter(identity).map(splitEqual).reduce(keyValsToObjectR, {});\n\nexport function parseUrl(url: string) {\n  const orEmptyString = (x) => x || '';\n  const [beforehash, hash] = splitHash(url).map(orEmptyString);\n  const [path, search] = splitQuery(beforehash).map(orEmptyString);\n\n  return { path, search, hash, url };\n}\n\nexport const buildUrl = (loc: LocationServices) => {\n  const path = loc.path();\n  const searchObject = loc.search();\n  const hash = loc.hash();\n\n  const search = Object.keys(searchObject)\n    .map((key) => {\n      const param = searchObject[key];\n      const vals = isArray(param) ? param : [param];\n      return vals.map((val) => key + '=' + val);\n    })\n    .reduce(unnestR, [])\n    .join('&');\n\n  return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\n\nexport function locationPluginFactory(\n  name: string,\n  isHtml5: boolean,\n  serviceClass: { new (uiRouter?: UIRouter): LocationServices },\n  configurationClass: { new (uiRouter?: UIRouter, isHtml5?: boolean): LocationConfig }\n) {\n  return function (uiRouter: UIRouter) {\n    const service = (uiRouter.locationService = new serviceClass(uiRouter));\n    const configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n\n    function dispose(router: UIRouter) {\n      router.dispose(service);\n      router.dispose(configuration);\n    }\n\n    return { name, service, configuration, dispose };\n  };\n}\n"
  ]
}