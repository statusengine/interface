{
  "version": 3,
  "file": "rejectFactory.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/core/transition/rejectFactory.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\n\n/** An enum for Transition Rejection reasons */\nenum RejectType {\n  /**\n   * A new transition superseded this one.\n   *\n   * While this transition was running, a new transition started.\n   * This transition is cancelled because it was superseded by new transition.\n   */\n  SUPERSEDED = 2,\n\n  /**\n   * The transition was aborted\n   *\n   * The transition was aborted by a hook which returned `false`\n   */\n  ABORTED = 3,\n\n  /**\n   * The transition was invalid\n   *\n   * The transition was never started because it was invalid\n   */\n  INVALID = 4,\n\n  /**\n   * The transition was ignored\n   *\n   * The transition was ignored because it would have no effect.\n   *\n   * Either:\n   *\n   * - The transition is targeting the current state and parameter values\n   * - The transition is targeting the same state and parameter values as the currently running transition.\n   */\n  IGNORED = 5,\n\n  /**\n   * The transition errored.\n   *\n   * This generally means a hook threw an error or returned a rejected promise\n   */\n  ERROR = 6,\n}\n\nexport { RejectType };\n\n/** @internal */\nlet id = 0;\n\nexport class Rejection {\n  /** @internal */\n  $id = id++;\n  /**\n   * The type of the rejection.\n   *\n   * This value is an number representing the type of transition rejection.\n   * If using Typescript, this is a Typescript enum.\n   *\n   * - [[RejectType.SUPERSEDED]] (`2`)\n   * - [[RejectType.ABORTED]] (`3`)\n   * - [[RejectType.INVALID]] (`4`)\n   * - [[RejectType.IGNORED]] (`5`)\n   * - [[RejectType.ERROR]] (`6`)\n   *\n   */\n  type: RejectType;\n\n  /**\n   * A message describing the rejection\n   */\n  message: string;\n\n  /**\n   * A detail object\n   *\n   * This value varies based on the mechanism for rejecting the transition.\n   * For example, if an error was thrown from a hook, the `detail` will be the `Error` object.\n   * If a hook returned a rejected promise, the `detail` will be the rejected value.\n   */\n  detail: any;\n\n  /**\n   * Indicates if the transition was redirected.\n   *\n   * When a transition is redirected, the rejection [[type]] will be [[RejectType.SUPERSEDED]] and this flag will be true.\n   */\n  redirected: boolean;\n\n  /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n  static isRejectionPromise(obj: any): boolean {\n    return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n  }\n\n  /** Returns a Rejection due to transition superseded */\n  static superseded(detail?: any, options?: any): Rejection {\n    const message = 'The transition has been superseded by a different transition';\n    const rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n    if (options && options.redirected) {\n      rejection.redirected = true;\n    }\n    return rejection;\n  }\n\n  /** Returns a Rejection due to redirected transition */\n  static redirected(detail?: any): Rejection {\n    return Rejection.superseded(detail, { redirected: true });\n  }\n\n  /** Returns a Rejection due to invalid transition */\n  static invalid(detail?: any): Rejection {\n    const message = 'This transition is invalid';\n    return new Rejection(RejectType.INVALID, message, detail);\n  }\n\n  /** Returns a Rejection due to ignored transition */\n  static ignored(detail?: any): Rejection {\n    const message = 'The transition was ignored';\n    return new Rejection(RejectType.IGNORED, message, detail);\n  }\n\n  /** Returns a Rejection due to aborted transition */\n  static aborted(detail?: any): Rejection {\n    const message = 'The transition has been aborted';\n    return new Rejection(RejectType.ABORTED, message, detail);\n  }\n\n  /** Returns a Rejection due to aborted transition */\n  static errored(detail?: any): Rejection {\n    const message = 'The transition errored';\n    return new Rejection(RejectType.ERROR, message, detail);\n  }\n\n  /**\n   * Returns a Rejection\n   *\n   * Normalizes a value as a Rejection.\n   * If the value is already a Rejection, returns it.\n   * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n   *\n   * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n   */\n  static normalize(detail?: Rejection | Error | any): Rejection {\n    return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n  }\n\n  constructor(type: number, message?: string, detail?: any) {\n    this.type = type;\n    this.message = message;\n    this.detail = detail;\n  }\n\n  toString() {\n    const detailString = (d: any) => (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d));\n    const detail = detailString(this.detail);\n    const { $id, type, message } = this;\n    return `Transition Rejection($id: ${$id} type: ${type}, message: ${message}, detail: ${detail})`;\n  }\n\n  toPromise(): Promise<any> {\n    return extend(silentRejection(this), { _transitionRejection: this });\n  }\n}\n"
  ]
}